name: Deploy to Kubernetes

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        
    - name: Add EC2 to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to Kubernetes
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          # Navigate to deployment directory
          cd /home/ubuntu
          
          # Create namespace if it doesn't exist
          kubectl create namespace my-app --dry-run=client -o yaml | kubectl apply -f -
          
          # Create deployment YAML
          cat << 'DEPLOY_EOF' > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: my-app
            namespace: my-app
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: my-app
            template:
              metadata:
                labels:
                  app: my-app
              spec:
                containers:
                - name: my-app
                  image: nginx:latest  # Replace with your actual image
                  ports:
                  - containerPort: 80
                  env:
                  - name: VERSION
                    value: "${{ github.sha }}"
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: my-app-service
            namespace: my-app
          spec:
            selector:
              app: my-app
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
                nodePort: 30080
            type: NodePort
          DEPLOY_EOF
          
          # Apply the deployment
          kubectl apply -f deployment.yaml
          
          # Wait for deployment to be ready
          kubectl rollout status deployment/my-app -n my-app --timeout=300s
          
          # Show deployment status
          echo "Deployment completed successfully!"
          kubectl get pods -n my-app
          kubectl get svc -n my-app
          
          # Show access information
          echo "Your application is accessible at:"
          echo "http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):30080"
        EOF
